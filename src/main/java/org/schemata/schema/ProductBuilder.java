// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: product.proto

package org.schemata.schema;

public final class ProductBuilder {
  private ProductBuilder() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ProductOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.schemata.schema.Product)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return Whether the category field is set.
     */
    boolean hasCategory();
    /**
     * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The category.
     */
    org.schemata.schema.CategoryBuilder.Category getCategory();
    /**
     * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     */
    org.schemata.schema.CategoryBuilder.CategoryOrBuilder getCategoryOrBuilder();

    /**
     * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return Whether the brand field is set.
     */
    boolean hasBrand();
    /**
     * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The brand.
     */
    org.schemata.schema.BrandBuilder.Brand getBrand();
    /**
     * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
     */
    org.schemata.schema.BrandBuilder.BrandOrBuilder getBrandOrBuilder();

    /**
     * <code>bool is_active = 5 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The isActive.
     */
    boolean getIsActive();
  }
  /**
   * Protobuf type {@code org.schemata.schema.Product}
   */
  public static final class Product extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.schemata.schema.Product)
      ProductOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Product.newBuilder() to construct.
    private Product(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Product() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Product();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Product(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              org.schemata.schema.CategoryBuilder.Category.Builder subBuilder = null;
              if (category_ != null) {
                subBuilder = category_.toBuilder();
              }
              category_ = input.readMessage(org.schemata.schema.CategoryBuilder.Category.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(category_);
                category_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              org.schemata.schema.BrandBuilder.Brand.Builder subBuilder = null;
              if (brand_ != null) {
                subBuilder = brand_.toBuilder();
              }
              brand_ = input.readMessage(org.schemata.schema.BrandBuilder.Brand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(brand_);
                brand_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              isActive_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.schemata.schema.ProductBuilder.internal_static_org_schemata_schema_Product_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.schemata.schema.ProductBuilder.internal_static_org_schemata_schema_Product_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.schemata.schema.ProductBuilder.Product.class, org.schemata.schema.ProductBuilder.Product.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>int32 id = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 3;
    private org.schemata.schema.CategoryBuilder.Category category_;
    /**
     * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return Whether the category field is set.
     */
    @java.lang.Override
    public boolean hasCategory() {
      return category_ != null;
    }
    /**
     * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The category.
     */
    @java.lang.Override
    public org.schemata.schema.CategoryBuilder.Category getCategory() {
      return category_ == null ? org.schemata.schema.CategoryBuilder.Category.getDefaultInstance() : category_;
    }
    /**
     * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     */
    @java.lang.Override
    public org.schemata.schema.CategoryBuilder.CategoryOrBuilder getCategoryOrBuilder() {
      return getCategory();
    }

    public static final int BRAND_FIELD_NUMBER = 4;
    private org.schemata.schema.BrandBuilder.Brand brand_;
    /**
     * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return Whether the brand field is set.
     */
    @java.lang.Override
    public boolean hasBrand() {
      return brand_ != null;
    }
    /**
     * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The brand.
     */
    @java.lang.Override
    public org.schemata.schema.BrandBuilder.Brand getBrand() {
      return brand_ == null ? org.schemata.schema.BrandBuilder.Brand.getDefaultInstance() : brand_;
    }
    /**
     * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
     */
    @java.lang.Override
    public org.schemata.schema.BrandBuilder.BrandOrBuilder getBrandOrBuilder() {
      return getBrand();
    }

    public static final int IS_ACTIVE_FIELD_NUMBER = 5;
    private boolean isActive_;
    /**
     * <code>bool is_active = 5 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The isActive.
     */
    @java.lang.Override
    public boolean getIsActive() {
      return isActive_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (category_ != null) {
        output.writeMessage(3, getCategory());
      }
      if (brand_ != null) {
        output.writeMessage(4, getBrand());
      }
      if (isActive_ != false) {
        output.writeBool(5, isActive_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (category_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCategory());
      }
      if (brand_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBrand());
      }
      if (isActive_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isActive_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.schemata.schema.ProductBuilder.Product)) {
        return super.equals(obj);
      }
      org.schemata.schema.ProductBuilder.Product other = (org.schemata.schema.ProductBuilder.Product) obj;

      if (getId()
          != other.getId()) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (hasCategory() != other.hasCategory()) return false;
      if (hasCategory()) {
        if (!getCategory()
            .equals(other.getCategory())) return false;
      }
      if (hasBrand() != other.hasBrand()) return false;
      if (hasBrand()) {
        if (!getBrand()
            .equals(other.getBrand())) return false;
      }
      if (getIsActive()
          != other.getIsActive()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasCategory()) {
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
      }
      if (hasBrand()) {
        hash = (37 * hash) + BRAND_FIELD_NUMBER;
        hash = (53 * hash) + getBrand().hashCode();
      }
      hash = (37 * hash) + IS_ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsActive());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.schemata.schema.ProductBuilder.Product parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.schemata.schema.ProductBuilder.Product parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.schemata.schema.ProductBuilder.Product parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.schemata.schema.ProductBuilder.Product parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.schemata.schema.ProductBuilder.Product parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.schemata.schema.ProductBuilder.Product parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.schemata.schema.ProductBuilder.Product parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.schemata.schema.ProductBuilder.Product parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.schemata.schema.ProductBuilder.Product parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.schemata.schema.ProductBuilder.Product parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.schemata.schema.ProductBuilder.Product parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.schemata.schema.ProductBuilder.Product parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.schemata.schema.ProductBuilder.Product prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.schemata.schema.Product}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.schemata.schema.Product)
        org.schemata.schema.ProductBuilder.ProductOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.schemata.schema.ProductBuilder.internal_static_org_schemata_schema_Product_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.schemata.schema.ProductBuilder.internal_static_org_schemata_schema_Product_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.schemata.schema.ProductBuilder.Product.class, org.schemata.schema.ProductBuilder.Product.Builder.class);
      }

      // Construct using org.schemata.schema.ProductBuilder.Product.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        name_ = "";

        if (categoryBuilder_ == null) {
          category_ = null;
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }
        if (brandBuilder_ == null) {
          brand_ = null;
        } else {
          brand_ = null;
          brandBuilder_ = null;
        }
        isActive_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.schemata.schema.ProductBuilder.internal_static_org_schemata_schema_Product_descriptor;
      }

      @java.lang.Override
      public org.schemata.schema.ProductBuilder.Product getDefaultInstanceForType() {
        return org.schemata.schema.ProductBuilder.Product.getDefaultInstance();
      }

      @java.lang.Override
      public org.schemata.schema.ProductBuilder.Product build() {
        org.schemata.schema.ProductBuilder.Product result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.schemata.schema.ProductBuilder.Product buildPartial() {
        org.schemata.schema.ProductBuilder.Product result = new org.schemata.schema.ProductBuilder.Product(this);
        result.id_ = id_;
        result.name_ = name_;
        if (categoryBuilder_ == null) {
          result.category_ = category_;
        } else {
          result.category_ = categoryBuilder_.build();
        }
        if (brandBuilder_ == null) {
          result.brand_ = brand_;
        } else {
          result.brand_ = brandBuilder_.build();
        }
        result.isActive_ = isActive_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.schemata.schema.ProductBuilder.Product) {
          return mergeFrom((org.schemata.schema.ProductBuilder.Product)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.schemata.schema.ProductBuilder.Product other) {
        if (other == org.schemata.schema.ProductBuilder.Product.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasCategory()) {
          mergeCategory(other.getCategory());
        }
        if (other.hasBrand()) {
          mergeBrand(other.getBrand());
        }
        if (other.getIsActive() != false) {
          setIsActive(other.getIsActive());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.schemata.schema.ProductBuilder.Product parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.schemata.schema.ProductBuilder.Product) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <code>int32 id = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private org.schemata.schema.CategoryBuilder.Category category_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.schemata.schema.CategoryBuilder.Category, org.schemata.schema.CategoryBuilder.Category.Builder, org.schemata.schema.CategoryBuilder.CategoryOrBuilder> categoryBuilder_;
      /**
       * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return Whether the category field is set.
       */
      public boolean hasCategory() {
        return categoryBuilder_ != null || category_ != null;
      }
      /**
       * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The category.
       */
      public org.schemata.schema.CategoryBuilder.Category getCategory() {
        if (categoryBuilder_ == null) {
          return category_ == null ? org.schemata.schema.CategoryBuilder.Category.getDefaultInstance() : category_;
        } else {
          return categoryBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder setCategory(org.schemata.schema.CategoryBuilder.Category value) {
        if (categoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          category_ = value;
          onChanged();
        } else {
          categoryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder setCategory(
          org.schemata.schema.CategoryBuilder.Category.Builder builderForValue) {
        if (categoryBuilder_ == null) {
          category_ = builderForValue.build();
          onChanged();
        } else {
          categoryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder mergeCategory(org.schemata.schema.CategoryBuilder.Category value) {
        if (categoryBuilder_ == null) {
          if (category_ != null) {
            category_ =
              org.schemata.schema.CategoryBuilder.Category.newBuilder(category_).mergeFrom(value).buildPartial();
          } else {
            category_ = value;
          }
          onChanged();
        } else {
          categoryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder clearCategory() {
        if (categoryBuilder_ == null) {
          category_ = null;
          onChanged();
        } else {
          category_ = null;
          categoryBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public org.schemata.schema.CategoryBuilder.Category.Builder getCategoryBuilder() {
        
        onChanged();
        return getCategoryFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public org.schemata.schema.CategoryBuilder.CategoryOrBuilder getCategoryOrBuilder() {
        if (categoryBuilder_ != null) {
          return categoryBuilder_.getMessageOrBuilder();
        } else {
          return category_ == null ?
              org.schemata.schema.CategoryBuilder.Category.getDefaultInstance() : category_;
        }
      }
      /**
       * <code>.org.schemata.schema.Category category = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.schemata.schema.CategoryBuilder.Category, org.schemata.schema.CategoryBuilder.Category.Builder, org.schemata.schema.CategoryBuilder.CategoryOrBuilder> 
          getCategoryFieldBuilder() {
        if (categoryBuilder_ == null) {
          categoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.schemata.schema.CategoryBuilder.Category, org.schemata.schema.CategoryBuilder.Category.Builder, org.schemata.schema.CategoryBuilder.CategoryOrBuilder>(
                  getCategory(),
                  getParentForChildren(),
                  isClean());
          category_ = null;
        }
        return categoryBuilder_;
      }

      private org.schemata.schema.BrandBuilder.Brand brand_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.schemata.schema.BrandBuilder.Brand, org.schemata.schema.BrandBuilder.Brand.Builder, org.schemata.schema.BrandBuilder.BrandOrBuilder> brandBuilder_;
      /**
       * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return Whether the brand field is set.
       */
      public boolean hasBrand() {
        return brandBuilder_ != null || brand_ != null;
      }
      /**
       * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The brand.
       */
      public org.schemata.schema.BrandBuilder.Brand getBrand() {
        if (brandBuilder_ == null) {
          return brand_ == null ? org.schemata.schema.BrandBuilder.Brand.getDefaultInstance() : brand_;
        } else {
          return brandBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder setBrand(org.schemata.schema.BrandBuilder.Brand value) {
        if (brandBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          brand_ = value;
          onChanged();
        } else {
          brandBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder setBrand(
          org.schemata.schema.BrandBuilder.Brand.Builder builderForValue) {
        if (brandBuilder_ == null) {
          brand_ = builderForValue.build();
          onChanged();
        } else {
          brandBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder mergeBrand(org.schemata.schema.BrandBuilder.Brand value) {
        if (brandBuilder_ == null) {
          if (brand_ != null) {
            brand_ =
              org.schemata.schema.BrandBuilder.Brand.newBuilder(brand_).mergeFrom(value).buildPartial();
          } else {
            brand_ = value;
          }
          onChanged();
        } else {
          brandBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder clearBrand() {
        if (brandBuilder_ == null) {
          brand_ = null;
          onChanged();
        } else {
          brand_ = null;
          brandBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public org.schemata.schema.BrandBuilder.Brand.Builder getBrandBuilder() {
        
        onChanged();
        return getBrandFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public org.schemata.schema.BrandBuilder.BrandOrBuilder getBrandOrBuilder() {
        if (brandBuilder_ != null) {
          return brandBuilder_.getMessageOrBuilder();
        } else {
          return brand_ == null ?
              org.schemata.schema.BrandBuilder.Brand.getDefaultInstance() : brand_;
        }
      }
      /**
       * <code>.org.schemata.schema.Brand brand = 4 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.schemata.schema.BrandBuilder.Brand, org.schemata.schema.BrandBuilder.Brand.Builder, org.schemata.schema.BrandBuilder.BrandOrBuilder> 
          getBrandFieldBuilder() {
        if (brandBuilder_ == null) {
          brandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.schemata.schema.BrandBuilder.Brand, org.schemata.schema.BrandBuilder.Brand.Builder, org.schemata.schema.BrandBuilder.BrandOrBuilder>(
                  getBrand(),
                  getParentForChildren(),
                  isClean());
          brand_ = null;
        }
        return brandBuilder_;
      }

      private boolean isActive_ ;
      /**
       * <code>bool is_active = 5 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The isActive.
       */
      @java.lang.Override
      public boolean getIsActive() {
        return isActive_;
      }
      /**
       * <code>bool is_active = 5 [(.org.schemata.schema.field_core) = { ... }</code>
       * @param value The isActive to set.
       * @return This builder for chaining.
       */
      public Builder setIsActive(boolean value) {
        
        isActive_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_active = 5 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearIsActive() {
        
        isActive_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.schemata.schema.Product)
    }

    // @@protoc_insertion_point(class_scope:org.schemata.schema.Product)
    private static final org.schemata.schema.ProductBuilder.Product DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.schemata.schema.ProductBuilder.Product();
    }

    public static org.schemata.schema.ProductBuilder.Product getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Product>
        PARSER = new com.google.protobuf.AbstractParser<Product>() {
      @java.lang.Override
      public Product parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Product(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Product> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Product> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.schemata.schema.ProductBuilder.Product getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProductEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.schemata.schema.ProductEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return Whether the previousBrandState field is set.
     */
    boolean hasPreviousBrandState();
    /**
     * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The previousBrandState.
     */
    org.schemata.schema.ProductBuilder.Product getPreviousBrandState();
    /**
     * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     */
    org.schemata.schema.ProductBuilder.ProductOrBuilder getPreviousBrandStateOrBuilder();

    /**
     * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return Whether the currentBrandState field is set.
     */
    boolean hasCurrentBrandState();
    /**
     * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The currentBrandState.
     */
    org.schemata.schema.ProductBuilder.Product getCurrentBrandState();
    /**
     * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     */
    org.schemata.schema.ProductBuilder.ProductOrBuilder getCurrentBrandStateOrBuilder();

    /**
     * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The enum numeric value on the wire for activityType.
     */
    int getActivityTypeValue();
    /**
     * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The activityType.
     */
    org.schemata.schema.SchemataBuilder.ActivityType getActivityType();
  }
  /**
   * Protobuf type {@code org.schemata.schema.ProductEvent}
   */
  public static final class ProductEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.schemata.schema.ProductEvent)
      ProductEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProductEvent.newBuilder() to construct.
    private ProductEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProductEvent() {
      activityType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProductEvent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProductEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.schemata.schema.ProductBuilder.Product.Builder subBuilder = null;
              if (previousBrandState_ != null) {
                subBuilder = previousBrandState_.toBuilder();
              }
              previousBrandState_ = input.readMessage(org.schemata.schema.ProductBuilder.Product.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(previousBrandState_);
                previousBrandState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.schemata.schema.ProductBuilder.Product.Builder subBuilder = null;
              if (currentBrandState_ != null) {
                subBuilder = currentBrandState_.toBuilder();
              }
              currentBrandState_ = input.readMessage(org.schemata.schema.ProductBuilder.Product.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(currentBrandState_);
                currentBrandState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              activityType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.schemata.schema.ProductBuilder.internal_static_org_schemata_schema_ProductEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.schemata.schema.ProductBuilder.internal_static_org_schemata_schema_ProductEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.schemata.schema.ProductBuilder.ProductEvent.class, org.schemata.schema.ProductBuilder.ProductEvent.Builder.class);
    }

    public static final int PREVIOUS_BRAND_STATE_FIELD_NUMBER = 1;
    private org.schemata.schema.ProductBuilder.Product previousBrandState_;
    /**
     * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return Whether the previousBrandState field is set.
     */
    @java.lang.Override
    public boolean hasPreviousBrandState() {
      return previousBrandState_ != null;
    }
    /**
     * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The previousBrandState.
     */
    @java.lang.Override
    public org.schemata.schema.ProductBuilder.Product getPreviousBrandState() {
      return previousBrandState_ == null ? org.schemata.schema.ProductBuilder.Product.getDefaultInstance() : previousBrandState_;
    }
    /**
     * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     */
    @java.lang.Override
    public org.schemata.schema.ProductBuilder.ProductOrBuilder getPreviousBrandStateOrBuilder() {
      return getPreviousBrandState();
    }

    public static final int CURRENT_BRAND_STATE_FIELD_NUMBER = 2;
    private org.schemata.schema.ProductBuilder.Product currentBrandState_;
    /**
     * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return Whether the currentBrandState field is set.
     */
    @java.lang.Override
    public boolean hasCurrentBrandState() {
      return currentBrandState_ != null;
    }
    /**
     * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The currentBrandState.
     */
    @java.lang.Override
    public org.schemata.schema.ProductBuilder.Product getCurrentBrandState() {
      return currentBrandState_ == null ? org.schemata.schema.ProductBuilder.Product.getDefaultInstance() : currentBrandState_;
    }
    /**
     * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     */
    @java.lang.Override
    public org.schemata.schema.ProductBuilder.ProductOrBuilder getCurrentBrandStateOrBuilder() {
      return getCurrentBrandState();
    }

    public static final int ACTIVITY_TYPE_FIELD_NUMBER = 3;
    private int activityType_;
    /**
     * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The enum numeric value on the wire for activityType.
     */
    @java.lang.Override public int getActivityTypeValue() {
      return activityType_;
    }
    /**
     * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The activityType.
     */
    @java.lang.Override public org.schemata.schema.SchemataBuilder.ActivityType getActivityType() {
      @SuppressWarnings("deprecation")
      org.schemata.schema.SchemataBuilder.ActivityType result = org.schemata.schema.SchemataBuilder.ActivityType.valueOf(activityType_);
      return result == null ? org.schemata.schema.SchemataBuilder.ActivityType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (previousBrandState_ != null) {
        output.writeMessage(1, getPreviousBrandState());
      }
      if (currentBrandState_ != null) {
        output.writeMessage(2, getCurrentBrandState());
      }
      if (activityType_ != org.schemata.schema.SchemataBuilder.ActivityType.CREATED.getNumber()) {
        output.writeEnum(3, activityType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (previousBrandState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPreviousBrandState());
      }
      if (currentBrandState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCurrentBrandState());
      }
      if (activityType_ != org.schemata.schema.SchemataBuilder.ActivityType.CREATED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, activityType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.schemata.schema.ProductBuilder.ProductEvent)) {
        return super.equals(obj);
      }
      org.schemata.schema.ProductBuilder.ProductEvent other = (org.schemata.schema.ProductBuilder.ProductEvent) obj;

      if (hasPreviousBrandState() != other.hasPreviousBrandState()) return false;
      if (hasPreviousBrandState()) {
        if (!getPreviousBrandState()
            .equals(other.getPreviousBrandState())) return false;
      }
      if (hasCurrentBrandState() != other.hasCurrentBrandState()) return false;
      if (hasCurrentBrandState()) {
        if (!getCurrentBrandState()
            .equals(other.getCurrentBrandState())) return false;
      }
      if (activityType_ != other.activityType_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPreviousBrandState()) {
        hash = (37 * hash) + PREVIOUS_BRAND_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getPreviousBrandState().hashCode();
      }
      if (hasCurrentBrandState()) {
        hash = (37 * hash) + CURRENT_BRAND_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentBrandState().hashCode();
      }
      hash = (37 * hash) + ACTIVITY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + activityType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.schemata.schema.ProductBuilder.ProductEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.schemata.schema.ProductBuilder.ProductEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.schemata.schema.ProductBuilder.ProductEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.schemata.schema.ProductBuilder.ProductEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.schemata.schema.ProductBuilder.ProductEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.schemata.schema.ProductBuilder.ProductEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.schemata.schema.ProductBuilder.ProductEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.schemata.schema.ProductBuilder.ProductEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.schemata.schema.ProductBuilder.ProductEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.schemata.schema.ProductBuilder.ProductEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.schemata.schema.ProductBuilder.ProductEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.schemata.schema.ProductBuilder.ProductEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.schemata.schema.ProductBuilder.ProductEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.schemata.schema.ProductEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.schemata.schema.ProductEvent)
        org.schemata.schema.ProductBuilder.ProductEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.schemata.schema.ProductBuilder.internal_static_org_schemata_schema_ProductEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.schemata.schema.ProductBuilder.internal_static_org_schemata_schema_ProductEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.schemata.schema.ProductBuilder.ProductEvent.class, org.schemata.schema.ProductBuilder.ProductEvent.Builder.class);
      }

      // Construct using org.schemata.schema.ProductBuilder.ProductEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (previousBrandStateBuilder_ == null) {
          previousBrandState_ = null;
        } else {
          previousBrandState_ = null;
          previousBrandStateBuilder_ = null;
        }
        if (currentBrandStateBuilder_ == null) {
          currentBrandState_ = null;
        } else {
          currentBrandState_ = null;
          currentBrandStateBuilder_ = null;
        }
        activityType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.schemata.schema.ProductBuilder.internal_static_org_schemata_schema_ProductEvent_descriptor;
      }

      @java.lang.Override
      public org.schemata.schema.ProductBuilder.ProductEvent getDefaultInstanceForType() {
        return org.schemata.schema.ProductBuilder.ProductEvent.getDefaultInstance();
      }

      @java.lang.Override
      public org.schemata.schema.ProductBuilder.ProductEvent build() {
        org.schemata.schema.ProductBuilder.ProductEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.schemata.schema.ProductBuilder.ProductEvent buildPartial() {
        org.schemata.schema.ProductBuilder.ProductEvent result = new org.schemata.schema.ProductBuilder.ProductEvent(this);
        if (previousBrandStateBuilder_ == null) {
          result.previousBrandState_ = previousBrandState_;
        } else {
          result.previousBrandState_ = previousBrandStateBuilder_.build();
        }
        if (currentBrandStateBuilder_ == null) {
          result.currentBrandState_ = currentBrandState_;
        } else {
          result.currentBrandState_ = currentBrandStateBuilder_.build();
        }
        result.activityType_ = activityType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.schemata.schema.ProductBuilder.ProductEvent) {
          return mergeFrom((org.schemata.schema.ProductBuilder.ProductEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.schemata.schema.ProductBuilder.ProductEvent other) {
        if (other == org.schemata.schema.ProductBuilder.ProductEvent.getDefaultInstance()) return this;
        if (other.hasPreviousBrandState()) {
          mergePreviousBrandState(other.getPreviousBrandState());
        }
        if (other.hasCurrentBrandState()) {
          mergeCurrentBrandState(other.getCurrentBrandState());
        }
        if (other.activityType_ != 0) {
          setActivityTypeValue(other.getActivityTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.schemata.schema.ProductBuilder.ProductEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.schemata.schema.ProductBuilder.ProductEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.schemata.schema.ProductBuilder.Product previousBrandState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.schemata.schema.ProductBuilder.Product, org.schemata.schema.ProductBuilder.Product.Builder, org.schemata.schema.ProductBuilder.ProductOrBuilder> previousBrandStateBuilder_;
      /**
       * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return Whether the previousBrandState field is set.
       */
      public boolean hasPreviousBrandState() {
        return previousBrandStateBuilder_ != null || previousBrandState_ != null;
      }
      /**
       * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The previousBrandState.
       */
      public org.schemata.schema.ProductBuilder.Product getPreviousBrandState() {
        if (previousBrandStateBuilder_ == null) {
          return previousBrandState_ == null ? org.schemata.schema.ProductBuilder.Product.getDefaultInstance() : previousBrandState_;
        } else {
          return previousBrandStateBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder setPreviousBrandState(org.schemata.schema.ProductBuilder.Product value) {
        if (previousBrandStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          previousBrandState_ = value;
          onChanged();
        } else {
          previousBrandStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder setPreviousBrandState(
          org.schemata.schema.ProductBuilder.Product.Builder builderForValue) {
        if (previousBrandStateBuilder_ == null) {
          previousBrandState_ = builderForValue.build();
          onChanged();
        } else {
          previousBrandStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder mergePreviousBrandState(org.schemata.schema.ProductBuilder.Product value) {
        if (previousBrandStateBuilder_ == null) {
          if (previousBrandState_ != null) {
            previousBrandState_ =
              org.schemata.schema.ProductBuilder.Product.newBuilder(previousBrandState_).mergeFrom(value).buildPartial();
          } else {
            previousBrandState_ = value;
          }
          onChanged();
        } else {
          previousBrandStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder clearPreviousBrandState() {
        if (previousBrandStateBuilder_ == null) {
          previousBrandState_ = null;
          onChanged();
        } else {
          previousBrandState_ = null;
          previousBrandStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public org.schemata.schema.ProductBuilder.Product.Builder getPreviousBrandStateBuilder() {
        
        onChanged();
        return getPreviousBrandStateFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public org.schemata.schema.ProductBuilder.ProductOrBuilder getPreviousBrandStateOrBuilder() {
        if (previousBrandStateBuilder_ != null) {
          return previousBrandStateBuilder_.getMessageOrBuilder();
        } else {
          return previousBrandState_ == null ?
              org.schemata.schema.ProductBuilder.Product.getDefaultInstance() : previousBrandState_;
        }
      }
      /**
       * <code>.org.schemata.schema.Product previous_brand_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.schemata.schema.ProductBuilder.Product, org.schemata.schema.ProductBuilder.Product.Builder, org.schemata.schema.ProductBuilder.ProductOrBuilder> 
          getPreviousBrandStateFieldBuilder() {
        if (previousBrandStateBuilder_ == null) {
          previousBrandStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.schemata.schema.ProductBuilder.Product, org.schemata.schema.ProductBuilder.Product.Builder, org.schemata.schema.ProductBuilder.ProductOrBuilder>(
                  getPreviousBrandState(),
                  getParentForChildren(),
                  isClean());
          previousBrandState_ = null;
        }
        return previousBrandStateBuilder_;
      }

      private org.schemata.schema.ProductBuilder.Product currentBrandState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.schemata.schema.ProductBuilder.Product, org.schemata.schema.ProductBuilder.Product.Builder, org.schemata.schema.ProductBuilder.ProductOrBuilder> currentBrandStateBuilder_;
      /**
       * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return Whether the currentBrandState field is set.
       */
      public boolean hasCurrentBrandState() {
        return currentBrandStateBuilder_ != null || currentBrandState_ != null;
      }
      /**
       * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The currentBrandState.
       */
      public org.schemata.schema.ProductBuilder.Product getCurrentBrandState() {
        if (currentBrandStateBuilder_ == null) {
          return currentBrandState_ == null ? org.schemata.schema.ProductBuilder.Product.getDefaultInstance() : currentBrandState_;
        } else {
          return currentBrandStateBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder setCurrentBrandState(org.schemata.schema.ProductBuilder.Product value) {
        if (currentBrandStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          currentBrandState_ = value;
          onChanged();
        } else {
          currentBrandStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder setCurrentBrandState(
          org.schemata.schema.ProductBuilder.Product.Builder builderForValue) {
        if (currentBrandStateBuilder_ == null) {
          currentBrandState_ = builderForValue.build();
          onChanged();
        } else {
          currentBrandStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder mergeCurrentBrandState(org.schemata.schema.ProductBuilder.Product value) {
        if (currentBrandStateBuilder_ == null) {
          if (currentBrandState_ != null) {
            currentBrandState_ =
              org.schemata.schema.ProductBuilder.Product.newBuilder(currentBrandState_).mergeFrom(value).buildPartial();
          } else {
            currentBrandState_ = value;
          }
          onChanged();
        } else {
          currentBrandStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder clearCurrentBrandState() {
        if (currentBrandStateBuilder_ == null) {
          currentBrandState_ = null;
          onChanged();
        } else {
          currentBrandState_ = null;
          currentBrandStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public org.schemata.schema.ProductBuilder.Product.Builder getCurrentBrandStateBuilder() {
        
        onChanged();
        return getCurrentBrandStateFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public org.schemata.schema.ProductBuilder.ProductOrBuilder getCurrentBrandStateOrBuilder() {
        if (currentBrandStateBuilder_ != null) {
          return currentBrandStateBuilder_.getMessageOrBuilder();
        } else {
          return currentBrandState_ == null ?
              org.schemata.schema.ProductBuilder.Product.getDefaultInstance() : currentBrandState_;
        }
      }
      /**
       * <code>.org.schemata.schema.Product current_brand_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.schemata.schema.ProductBuilder.Product, org.schemata.schema.ProductBuilder.Product.Builder, org.schemata.schema.ProductBuilder.ProductOrBuilder> 
          getCurrentBrandStateFieldBuilder() {
        if (currentBrandStateBuilder_ == null) {
          currentBrandStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.schemata.schema.ProductBuilder.Product, org.schemata.schema.ProductBuilder.Product.Builder, org.schemata.schema.ProductBuilder.ProductOrBuilder>(
                  getCurrentBrandState(),
                  getParentForChildren(),
                  isClean());
          currentBrandState_ = null;
        }
        return currentBrandStateBuilder_;
      }

      private int activityType_ = 0;
      /**
       * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The enum numeric value on the wire for activityType.
       */
      @java.lang.Override public int getActivityTypeValue() {
        return activityType_;
      }
      /**
       * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @param value The enum numeric value on the wire for activityType to set.
       * @return This builder for chaining.
       */
      public Builder setActivityTypeValue(int value) {
        
        activityType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The activityType.
       */
      @java.lang.Override
      public org.schemata.schema.SchemataBuilder.ActivityType getActivityType() {
        @SuppressWarnings("deprecation")
        org.schemata.schema.SchemataBuilder.ActivityType result = org.schemata.schema.SchemataBuilder.ActivityType.valueOf(activityType_);
        return result == null ? org.schemata.schema.SchemataBuilder.ActivityType.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @param value The activityType to set.
       * @return This builder for chaining.
       */
      public Builder setActivityType(org.schemata.schema.SchemataBuilder.ActivityType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        activityType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearActivityType() {
        
        activityType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.schemata.schema.ProductEvent)
    }

    // @@protoc_insertion_point(class_scope:org.schemata.schema.ProductEvent)
    private static final org.schemata.schema.ProductBuilder.ProductEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.schemata.schema.ProductBuilder.ProductEvent();
    }

    public static org.schemata.schema.ProductBuilder.ProductEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProductEvent>
        PARSER = new com.google.protobuf.AbstractParser<ProductEvent>() {
      @java.lang.Override
      public ProductEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProductEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProductEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProductEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.schemata.schema.ProductBuilder.ProductEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_schemata_schema_Product_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_schemata_schema_Product_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_schemata_schema_ProductEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_schemata_schema_ProductEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rproduct.proto\022\023org.schemata.schema\032\027sc" +
      "hemata_protocol.proto\032\016category.proto\032\013b" +
      "rand.proto\"\343\004\n\007Product\0225\n\002id\030\001 \001(\005B)\212\227\"!" +
      "\212\265\030\035Unique identifier for Product\250\227\"\001\022)\n" +
      "\004name\030\002 \001(\tB\033\212\227\"\027\212\265\030\023Name of the Product" +
      "\022U\n\010category\030\003 \001(\0132\035.org.schemata.schema" +
      ".CategoryB$\212\227\" \212\265\030\034Category name of the " +
      "product\022L\n\005brand\030\004 \001(\0132\032.org.schemata.sc" +
      "hema.BrandB!\212\227\"\035\212\265\030\031Brand name of the pr" +
      "oduct\022\226\001\n\tis_active\030\005 \001(\010B\202\001\212\227\"R\212\265\030Ndefi" +
      "ne the active status of the Product. `tr" +
      "ue` == active; `false` = inactive`\212\227\"(\222\265" +
      "\030$should refactor to non-binary status:\267" +
      "\001\212\246\0350\212\265\030,This is the description of the " +
      "Product table\212\246\035#\222\265\030\037The comment added a" +
      "fter thought\212\246\035\032\232\265\030\026db.product MySQL tab" +
      "le\222\246\035\010Platform\232\246\035\004Core\240\246\035\001\262\246\035\016#team-plat" +
      "form\272\246\035\020#alerts-platform\"\373\003\n\014ProductEven" +
      "t\022~\n\024previous_brand_state\030\001 \001(\0132\034.org.sc" +
      "hemata.schema.ProductBB\212\227\">\212\265\030:Previous " +
      "version of the Product entity before the" +
      " mutation\022|\n\023current_brand_state\030\002 \001(\0132\034" +
      ".org.schemata.schema.ProductBA\212\227\"=\212\265\0309Cu" +
      "rrent version of the Product entity befo" +
      "re the mutation\022l\n\ractivity_type\030\003 \001(\0162!" +
      ".org.schemata.schema.ActivityTypeB2\212\227\".\212" +
      "\265\030*Lifecycle event type for the Product " +
      "table:\177\212\246\0359\212\265\0305This is the description o" +
      "f the Product activity table\222\246\035\010Platform" +
      "\232\246\035\004Core\240\246\035\002\300\246\035\001\262\246\035\016#team-platform\272\246\035\020#a" +
      "lerts-platformB%\n\023org.schemata.schemaB\016P" +
      "roductBuilderb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.schemata.schema.SchemataBuilder.getDescriptor(),
          org.schemata.schema.CategoryBuilder.getDescriptor(),
          org.schemata.schema.BrandBuilder.getDescriptor(),
        });
    internal_static_org_schemata_schema_Product_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_schemata_schema_Product_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_schemata_schema_Product_descriptor,
        new java.lang.String[] { "Id", "Name", "Category", "Brand", "IsActive", });
    internal_static_org_schemata_schema_ProductEvent_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_schemata_schema_ProductEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_schemata_schema_ProductEvent_descriptor,
        new java.lang.String[] { "PreviousBrandState", "CurrentBrandState", "ActivityType", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(org.schemata.schema.SchemataBuilder.alertChannel);
    registry.add(org.schemata.schema.SchemataBuilder.domain);
    registry.add(org.schemata.schema.SchemataBuilder.eventType);
    registry.add(org.schemata.schema.SchemataBuilder.fieldCore);
    registry.add(org.schemata.schema.SchemataBuilder.isPrimaryKey);
    registry.add(org.schemata.schema.SchemataBuilder.messageCore);
    registry.add(org.schemata.schema.SchemataBuilder.owner);
    registry.add(org.schemata.schema.SchemataBuilder.teamChannel);
    registry.add(org.schemata.schema.SchemataBuilder.type);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    org.schemata.schema.SchemataBuilder.getDescriptor();
    org.schemata.schema.CategoryBuilder.getDescriptor();
    org.schemata.schema.BrandBuilder.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
