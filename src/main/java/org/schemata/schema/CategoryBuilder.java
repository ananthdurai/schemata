// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: category.proto

package org.schemata.schema;

public final class CategoryBuilder {
  private CategoryBuilder() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CategoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.schemata.schema.Category)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>bool is_active = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The isActive.
     */
    boolean getIsActive();
  }
  /**
   * Protobuf type {@code org.schemata.schema.Category}
   */
  public static final class Category extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.schemata.schema.Category)
      CategoryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Category.newBuilder() to construct.
    private Category(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Category() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Category();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Category(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 24: {

              isActive_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.schemata.schema.CategoryBuilder.internal_static_org_schemata_schema_Category_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.schemata.schema.CategoryBuilder.internal_static_org_schemata_schema_Category_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.schemata.schema.CategoryBuilder.Category.class, org.schemata.schema.CategoryBuilder.Category.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>int32 id = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IS_ACTIVE_FIELD_NUMBER = 3;
    private boolean isActive_;
    /**
     * <code>bool is_active = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The isActive.
     */
    @java.lang.Override
    public boolean getIsActive() {
      return isActive_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (isActive_ != false) {
        output.writeBool(3, isActive_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (isActive_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isActive_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.schemata.schema.CategoryBuilder.Category)) {
        return super.equals(obj);
      }
      org.schemata.schema.CategoryBuilder.Category other = (org.schemata.schema.CategoryBuilder.Category) obj;

      if (getId()
          != other.getId()) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (getIsActive()
          != other.getIsActive()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + IS_ACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsActive());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.schemata.schema.CategoryBuilder.Category parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.schemata.schema.CategoryBuilder.Category parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.schemata.schema.CategoryBuilder.Category parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.schemata.schema.CategoryBuilder.Category parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.schemata.schema.CategoryBuilder.Category parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.schemata.schema.CategoryBuilder.Category parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.schemata.schema.CategoryBuilder.Category parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.schemata.schema.CategoryBuilder.Category parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.schemata.schema.CategoryBuilder.Category parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.schemata.schema.CategoryBuilder.Category parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.schemata.schema.CategoryBuilder.Category parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.schemata.schema.CategoryBuilder.Category parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.schemata.schema.CategoryBuilder.Category prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.schemata.schema.Category}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.schemata.schema.Category)
        org.schemata.schema.CategoryBuilder.CategoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.schemata.schema.CategoryBuilder.internal_static_org_schemata_schema_Category_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.schemata.schema.CategoryBuilder.internal_static_org_schemata_schema_Category_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.schemata.schema.CategoryBuilder.Category.class, org.schemata.schema.CategoryBuilder.Category.Builder.class);
      }

      // Construct using org.schemata.schema.CategoryBuilder.Category.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        name_ = "";

        isActive_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.schemata.schema.CategoryBuilder.internal_static_org_schemata_schema_Category_descriptor;
      }

      @java.lang.Override
      public org.schemata.schema.CategoryBuilder.Category getDefaultInstanceForType() {
        return org.schemata.schema.CategoryBuilder.Category.getDefaultInstance();
      }

      @java.lang.Override
      public org.schemata.schema.CategoryBuilder.Category build() {
        org.schemata.schema.CategoryBuilder.Category result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.schemata.schema.CategoryBuilder.Category buildPartial() {
        org.schemata.schema.CategoryBuilder.Category result = new org.schemata.schema.CategoryBuilder.Category(this);
        result.id_ = id_;
        result.name_ = name_;
        result.isActive_ = isActive_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.schemata.schema.CategoryBuilder.Category) {
          return mergeFrom((org.schemata.schema.CategoryBuilder.Category)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.schemata.schema.CategoryBuilder.Category other) {
        if (other == org.schemata.schema.CategoryBuilder.Category.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getIsActive() != false) {
          setIsActive(other.getIsActive());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.schemata.schema.CategoryBuilder.Category parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.schemata.schema.CategoryBuilder.Category) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <code>int32 id = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private boolean isActive_ ;
      /**
       * <code>bool is_active = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The isActive.
       */
      @java.lang.Override
      public boolean getIsActive() {
        return isActive_;
      }
      /**
       * <code>bool is_active = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @param value The isActive to set.
       * @return This builder for chaining.
       */
      public Builder setIsActive(boolean value) {
        
        isActive_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_active = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearIsActive() {
        
        isActive_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.schemata.schema.Category)
    }

    // @@protoc_insertion_point(class_scope:org.schemata.schema.Category)
    private static final org.schemata.schema.CategoryBuilder.Category DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.schemata.schema.CategoryBuilder.Category();
    }

    public static org.schemata.schema.CategoryBuilder.Category getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Category>
        PARSER = new com.google.protobuf.AbstractParser<Category>() {
      @java.lang.Override
      public Category parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Category(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Category> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Category> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.schemata.schema.CategoryBuilder.Category getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CategoryEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.schemata.schema.CategoryEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return Whether the previousCategoryState field is set.
     */
    boolean hasPreviousCategoryState();
    /**
     * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The previousCategoryState.
     */
    org.schemata.schema.CategoryBuilder.Category getPreviousCategoryState();
    /**
     * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     */
    org.schemata.schema.CategoryBuilder.CategoryOrBuilder getPreviousCategoryStateOrBuilder();

    /**
     * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return Whether the currentCategoryState field is set.
     */
    boolean hasCurrentCategoryState();
    /**
     * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The currentCategoryState.
     */
    org.schemata.schema.CategoryBuilder.Category getCurrentCategoryState();
    /**
     * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     */
    org.schemata.schema.CategoryBuilder.CategoryOrBuilder getCurrentCategoryStateOrBuilder();

    /**
     * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The enum numeric value on the wire for activityType.
     */
    int getActivityTypeValue();
    /**
     * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The activityType.
     */
    org.schemata.schema.SchemataBuilder.ActivityType getActivityType();
  }
  /**
   * Protobuf type {@code org.schemata.schema.CategoryEvent}
   */
  public static final class CategoryEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.schemata.schema.CategoryEvent)
      CategoryEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CategoryEvent.newBuilder() to construct.
    private CategoryEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CategoryEvent() {
      activityType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CategoryEvent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CategoryEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.schemata.schema.CategoryBuilder.Category.Builder subBuilder = null;
              if (previousCategoryState_ != null) {
                subBuilder = previousCategoryState_.toBuilder();
              }
              previousCategoryState_ = input.readMessage(org.schemata.schema.CategoryBuilder.Category.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(previousCategoryState_);
                previousCategoryState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.schemata.schema.CategoryBuilder.Category.Builder subBuilder = null;
              if (currentCategoryState_ != null) {
                subBuilder = currentCategoryState_.toBuilder();
              }
              currentCategoryState_ = input.readMessage(org.schemata.schema.CategoryBuilder.Category.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(currentCategoryState_);
                currentCategoryState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              activityType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.schemata.schema.CategoryBuilder.internal_static_org_schemata_schema_CategoryEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.schemata.schema.CategoryBuilder.internal_static_org_schemata_schema_CategoryEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.schemata.schema.CategoryBuilder.CategoryEvent.class, org.schemata.schema.CategoryBuilder.CategoryEvent.Builder.class);
    }

    public static final int PREVIOUS_CATEGORY_STATE_FIELD_NUMBER = 1;
    private org.schemata.schema.CategoryBuilder.Category previousCategoryState_;
    /**
     * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return Whether the previousCategoryState field is set.
     */
    @java.lang.Override
    public boolean hasPreviousCategoryState() {
      return previousCategoryState_ != null;
    }
    /**
     * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The previousCategoryState.
     */
    @java.lang.Override
    public org.schemata.schema.CategoryBuilder.Category getPreviousCategoryState() {
      return previousCategoryState_ == null ? org.schemata.schema.CategoryBuilder.Category.getDefaultInstance() : previousCategoryState_;
    }
    /**
     * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
     */
    @java.lang.Override
    public org.schemata.schema.CategoryBuilder.CategoryOrBuilder getPreviousCategoryStateOrBuilder() {
      return getPreviousCategoryState();
    }

    public static final int CURRENT_CATEGORY_STATE_FIELD_NUMBER = 2;
    private org.schemata.schema.CategoryBuilder.Category currentCategoryState_;
    /**
     * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return Whether the currentCategoryState field is set.
     */
    @java.lang.Override
    public boolean hasCurrentCategoryState() {
      return currentCategoryState_ != null;
    }
    /**
     * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The currentCategoryState.
     */
    @java.lang.Override
    public org.schemata.schema.CategoryBuilder.Category getCurrentCategoryState() {
      return currentCategoryState_ == null ? org.schemata.schema.CategoryBuilder.Category.getDefaultInstance() : currentCategoryState_;
    }
    /**
     * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
     */
    @java.lang.Override
    public org.schemata.schema.CategoryBuilder.CategoryOrBuilder getCurrentCategoryStateOrBuilder() {
      return getCurrentCategoryState();
    }

    public static final int ACTIVITY_TYPE_FIELD_NUMBER = 3;
    private int activityType_;
    /**
     * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The enum numeric value on the wire for activityType.
     */
    @java.lang.Override public int getActivityTypeValue() {
      return activityType_;
    }
    /**
     * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
     * @return The activityType.
     */
    @java.lang.Override public org.schemata.schema.SchemataBuilder.ActivityType getActivityType() {
      @SuppressWarnings("deprecation")
      org.schemata.schema.SchemataBuilder.ActivityType result = org.schemata.schema.SchemataBuilder.ActivityType.valueOf(activityType_);
      return result == null ? org.schemata.schema.SchemataBuilder.ActivityType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (previousCategoryState_ != null) {
        output.writeMessage(1, getPreviousCategoryState());
      }
      if (currentCategoryState_ != null) {
        output.writeMessage(2, getCurrentCategoryState());
      }
      if (activityType_ != org.schemata.schema.SchemataBuilder.ActivityType.CREATED.getNumber()) {
        output.writeEnum(3, activityType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (previousCategoryState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPreviousCategoryState());
      }
      if (currentCategoryState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCurrentCategoryState());
      }
      if (activityType_ != org.schemata.schema.SchemataBuilder.ActivityType.CREATED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, activityType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.schemata.schema.CategoryBuilder.CategoryEvent)) {
        return super.equals(obj);
      }
      org.schemata.schema.CategoryBuilder.CategoryEvent other = (org.schemata.schema.CategoryBuilder.CategoryEvent) obj;

      if (hasPreviousCategoryState() != other.hasPreviousCategoryState()) return false;
      if (hasPreviousCategoryState()) {
        if (!getPreviousCategoryState()
            .equals(other.getPreviousCategoryState())) return false;
      }
      if (hasCurrentCategoryState() != other.hasCurrentCategoryState()) return false;
      if (hasCurrentCategoryState()) {
        if (!getCurrentCategoryState()
            .equals(other.getCurrentCategoryState())) return false;
      }
      if (activityType_ != other.activityType_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPreviousCategoryState()) {
        hash = (37 * hash) + PREVIOUS_CATEGORY_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getPreviousCategoryState().hashCode();
      }
      if (hasCurrentCategoryState()) {
        hash = (37 * hash) + CURRENT_CATEGORY_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentCategoryState().hashCode();
      }
      hash = (37 * hash) + ACTIVITY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + activityType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.schemata.schema.CategoryBuilder.CategoryEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.schemata.schema.CategoryBuilder.CategoryEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.schemata.schema.CategoryBuilder.CategoryEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.schemata.schema.CategoryBuilder.CategoryEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.schemata.schema.CategoryBuilder.CategoryEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.schemata.schema.CategoryBuilder.CategoryEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.schemata.schema.CategoryBuilder.CategoryEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.schemata.schema.CategoryBuilder.CategoryEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.schemata.schema.CategoryBuilder.CategoryEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.schemata.schema.CategoryBuilder.CategoryEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.schemata.schema.CategoryBuilder.CategoryEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.schemata.schema.CategoryBuilder.CategoryEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.schemata.schema.CategoryBuilder.CategoryEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.schemata.schema.CategoryEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.schemata.schema.CategoryEvent)
        org.schemata.schema.CategoryBuilder.CategoryEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.schemata.schema.CategoryBuilder.internal_static_org_schemata_schema_CategoryEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.schemata.schema.CategoryBuilder.internal_static_org_schemata_schema_CategoryEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.schemata.schema.CategoryBuilder.CategoryEvent.class, org.schemata.schema.CategoryBuilder.CategoryEvent.Builder.class);
      }

      // Construct using org.schemata.schema.CategoryBuilder.CategoryEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (previousCategoryStateBuilder_ == null) {
          previousCategoryState_ = null;
        } else {
          previousCategoryState_ = null;
          previousCategoryStateBuilder_ = null;
        }
        if (currentCategoryStateBuilder_ == null) {
          currentCategoryState_ = null;
        } else {
          currentCategoryState_ = null;
          currentCategoryStateBuilder_ = null;
        }
        activityType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.schemata.schema.CategoryBuilder.internal_static_org_schemata_schema_CategoryEvent_descriptor;
      }

      @java.lang.Override
      public org.schemata.schema.CategoryBuilder.CategoryEvent getDefaultInstanceForType() {
        return org.schemata.schema.CategoryBuilder.CategoryEvent.getDefaultInstance();
      }

      @java.lang.Override
      public org.schemata.schema.CategoryBuilder.CategoryEvent build() {
        org.schemata.schema.CategoryBuilder.CategoryEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.schemata.schema.CategoryBuilder.CategoryEvent buildPartial() {
        org.schemata.schema.CategoryBuilder.CategoryEvent result = new org.schemata.schema.CategoryBuilder.CategoryEvent(this);
        if (previousCategoryStateBuilder_ == null) {
          result.previousCategoryState_ = previousCategoryState_;
        } else {
          result.previousCategoryState_ = previousCategoryStateBuilder_.build();
        }
        if (currentCategoryStateBuilder_ == null) {
          result.currentCategoryState_ = currentCategoryState_;
        } else {
          result.currentCategoryState_ = currentCategoryStateBuilder_.build();
        }
        result.activityType_ = activityType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.schemata.schema.CategoryBuilder.CategoryEvent) {
          return mergeFrom((org.schemata.schema.CategoryBuilder.CategoryEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.schemata.schema.CategoryBuilder.CategoryEvent other) {
        if (other == org.schemata.schema.CategoryBuilder.CategoryEvent.getDefaultInstance()) return this;
        if (other.hasPreviousCategoryState()) {
          mergePreviousCategoryState(other.getPreviousCategoryState());
        }
        if (other.hasCurrentCategoryState()) {
          mergeCurrentCategoryState(other.getCurrentCategoryState());
        }
        if (other.activityType_ != 0) {
          setActivityTypeValue(other.getActivityTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.schemata.schema.CategoryBuilder.CategoryEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.schemata.schema.CategoryBuilder.CategoryEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.schemata.schema.CategoryBuilder.Category previousCategoryState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.schemata.schema.CategoryBuilder.Category, org.schemata.schema.CategoryBuilder.Category.Builder, org.schemata.schema.CategoryBuilder.CategoryOrBuilder> previousCategoryStateBuilder_;
      /**
       * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return Whether the previousCategoryState field is set.
       */
      public boolean hasPreviousCategoryState() {
        return previousCategoryStateBuilder_ != null || previousCategoryState_ != null;
      }
      /**
       * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The previousCategoryState.
       */
      public org.schemata.schema.CategoryBuilder.Category getPreviousCategoryState() {
        if (previousCategoryStateBuilder_ == null) {
          return previousCategoryState_ == null ? org.schemata.schema.CategoryBuilder.Category.getDefaultInstance() : previousCategoryState_;
        } else {
          return previousCategoryStateBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder setPreviousCategoryState(org.schemata.schema.CategoryBuilder.Category value) {
        if (previousCategoryStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          previousCategoryState_ = value;
          onChanged();
        } else {
          previousCategoryStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder setPreviousCategoryState(
          org.schemata.schema.CategoryBuilder.Category.Builder builderForValue) {
        if (previousCategoryStateBuilder_ == null) {
          previousCategoryState_ = builderForValue.build();
          onChanged();
        } else {
          previousCategoryStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder mergePreviousCategoryState(org.schemata.schema.CategoryBuilder.Category value) {
        if (previousCategoryStateBuilder_ == null) {
          if (previousCategoryState_ != null) {
            previousCategoryState_ =
              org.schemata.schema.CategoryBuilder.Category.newBuilder(previousCategoryState_).mergeFrom(value).buildPartial();
          } else {
            previousCategoryState_ = value;
          }
          onChanged();
        } else {
          previousCategoryStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder clearPreviousCategoryState() {
        if (previousCategoryStateBuilder_ == null) {
          previousCategoryState_ = null;
          onChanged();
        } else {
          previousCategoryState_ = null;
          previousCategoryStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public org.schemata.schema.CategoryBuilder.Category.Builder getPreviousCategoryStateBuilder() {
        
        onChanged();
        return getPreviousCategoryStateFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public org.schemata.schema.CategoryBuilder.CategoryOrBuilder getPreviousCategoryStateOrBuilder() {
        if (previousCategoryStateBuilder_ != null) {
          return previousCategoryStateBuilder_.getMessageOrBuilder();
        } else {
          return previousCategoryState_ == null ?
              org.schemata.schema.CategoryBuilder.Category.getDefaultInstance() : previousCategoryState_;
        }
      }
      /**
       * <code>.org.schemata.schema.Category previous_category_state = 1 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.schemata.schema.CategoryBuilder.Category, org.schemata.schema.CategoryBuilder.Category.Builder, org.schemata.schema.CategoryBuilder.CategoryOrBuilder> 
          getPreviousCategoryStateFieldBuilder() {
        if (previousCategoryStateBuilder_ == null) {
          previousCategoryStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.schemata.schema.CategoryBuilder.Category, org.schemata.schema.CategoryBuilder.Category.Builder, org.schemata.schema.CategoryBuilder.CategoryOrBuilder>(
                  getPreviousCategoryState(),
                  getParentForChildren(),
                  isClean());
          previousCategoryState_ = null;
        }
        return previousCategoryStateBuilder_;
      }

      private org.schemata.schema.CategoryBuilder.Category currentCategoryState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.schemata.schema.CategoryBuilder.Category, org.schemata.schema.CategoryBuilder.Category.Builder, org.schemata.schema.CategoryBuilder.CategoryOrBuilder> currentCategoryStateBuilder_;
      /**
       * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return Whether the currentCategoryState field is set.
       */
      public boolean hasCurrentCategoryState() {
        return currentCategoryStateBuilder_ != null || currentCategoryState_ != null;
      }
      /**
       * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The currentCategoryState.
       */
      public org.schemata.schema.CategoryBuilder.Category getCurrentCategoryState() {
        if (currentCategoryStateBuilder_ == null) {
          return currentCategoryState_ == null ? org.schemata.schema.CategoryBuilder.Category.getDefaultInstance() : currentCategoryState_;
        } else {
          return currentCategoryStateBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder setCurrentCategoryState(org.schemata.schema.CategoryBuilder.Category value) {
        if (currentCategoryStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          currentCategoryState_ = value;
          onChanged();
        } else {
          currentCategoryStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder setCurrentCategoryState(
          org.schemata.schema.CategoryBuilder.Category.Builder builderForValue) {
        if (currentCategoryStateBuilder_ == null) {
          currentCategoryState_ = builderForValue.build();
          onChanged();
        } else {
          currentCategoryStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder mergeCurrentCategoryState(org.schemata.schema.CategoryBuilder.Category value) {
        if (currentCategoryStateBuilder_ == null) {
          if (currentCategoryState_ != null) {
            currentCategoryState_ =
              org.schemata.schema.CategoryBuilder.Category.newBuilder(currentCategoryState_).mergeFrom(value).buildPartial();
          } else {
            currentCategoryState_ = value;
          }
          onChanged();
        } else {
          currentCategoryStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public Builder clearCurrentCategoryState() {
        if (currentCategoryStateBuilder_ == null) {
          currentCategoryState_ = null;
          onChanged();
        } else {
          currentCategoryState_ = null;
          currentCategoryStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public org.schemata.schema.CategoryBuilder.Category.Builder getCurrentCategoryStateBuilder() {
        
        onChanged();
        return getCurrentCategoryStateFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      public org.schemata.schema.CategoryBuilder.CategoryOrBuilder getCurrentCategoryStateOrBuilder() {
        if (currentCategoryStateBuilder_ != null) {
          return currentCategoryStateBuilder_.getMessageOrBuilder();
        } else {
          return currentCategoryState_ == null ?
              org.schemata.schema.CategoryBuilder.Category.getDefaultInstance() : currentCategoryState_;
        }
      }
      /**
       * <code>.org.schemata.schema.Category current_category_state = 2 [(.org.schemata.schema.field_core) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.schemata.schema.CategoryBuilder.Category, org.schemata.schema.CategoryBuilder.Category.Builder, org.schemata.schema.CategoryBuilder.CategoryOrBuilder> 
          getCurrentCategoryStateFieldBuilder() {
        if (currentCategoryStateBuilder_ == null) {
          currentCategoryStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.schemata.schema.CategoryBuilder.Category, org.schemata.schema.CategoryBuilder.Category.Builder, org.schemata.schema.CategoryBuilder.CategoryOrBuilder>(
                  getCurrentCategoryState(),
                  getParentForChildren(),
                  isClean());
          currentCategoryState_ = null;
        }
        return currentCategoryStateBuilder_;
      }

      private int activityType_ = 0;
      /**
       * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The enum numeric value on the wire for activityType.
       */
      @java.lang.Override public int getActivityTypeValue() {
        return activityType_;
      }
      /**
       * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @param value The enum numeric value on the wire for activityType to set.
       * @return This builder for chaining.
       */
      public Builder setActivityTypeValue(int value) {
        
        activityType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return The activityType.
       */
      @java.lang.Override
      public org.schemata.schema.SchemataBuilder.ActivityType getActivityType() {
        @SuppressWarnings("deprecation")
        org.schemata.schema.SchemataBuilder.ActivityType result = org.schemata.schema.SchemataBuilder.ActivityType.valueOf(activityType_);
        return result == null ? org.schemata.schema.SchemataBuilder.ActivityType.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @param value The activityType to set.
       * @return This builder for chaining.
       */
      public Builder setActivityType(org.schemata.schema.SchemataBuilder.ActivityType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        activityType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.schemata.schema.ActivityType activity_type = 3 [(.org.schemata.schema.field_core) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearActivityType() {
        
        activityType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.schemata.schema.CategoryEvent)
    }

    // @@protoc_insertion_point(class_scope:org.schemata.schema.CategoryEvent)
    private static final org.schemata.schema.CategoryBuilder.CategoryEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.schemata.schema.CategoryBuilder.CategoryEvent();
    }

    public static org.schemata.schema.CategoryBuilder.CategoryEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CategoryEvent>
        PARSER = new com.google.protobuf.AbstractParser<CategoryEvent>() {
      @java.lang.Override
      public CategoryEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CategoryEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CategoryEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CategoryEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.schemata.schema.CategoryBuilder.CategoryEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_schemata_schema_Category_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_schemata_schema_Category_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_schemata_schema_CategoryEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_schemata_schema_CategoryEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016category.proto\022\023org.schemata.schema\032\027s" +
      "chemata_protocol.proto\"\304\003\n\010Category\0226\n\002i" +
      "d\030\001 \001(\005B*\212\227\"\"\212\265\030\036Unique identifier for C" +
      "ategory\250\227\"\001\022*\n\004name\030\002 \001(\tB\034\212\227\"\030\212\265\030\024Name " +
      "of the Category\022\227\001\n\tis_active\030\003 \001(\010B\203\001\212\227" +
      "\"S\212\265\030Odefine the active status of the Ca" +
      "tegory. `true` == active; `false` = inac" +
      "tive`\212\227\"(\222\265\030$should refactor to non-bina" +
      "ry status:\271\001\212\246\0351\212\265\030-This is the descript" +
      "ion of the Category table\212\246\035#\222\265\030\037The com" +
      "ment added after thought\212\246\035\033\232\265\030\027db.categ" +
      "ory MySQL table\222\246\035\010Platform\232\246\035\004Core\240\246\035\001\262" +
      "\246\035\016#team-platform\272\246\035\020#alerts-platform\"\213\004" +
      "\n\rCategoryEvent\022\203\001\n\027previous_category_st" +
      "ate\030\001 \001(\0132\035.org.schemata.schema.Category" +
      "BC\212\227\"?\212\265\030;Previous version of the Catego" +
      "ry entity before the mutation\022\201\001\n\026curren" +
      "t_category_state\030\002 \001(\0132\035.org.schemata.sc" +
      "hema.CategoryBB\212\227\">\212\265\030:Current version o" +
      "f the Category entity before the mutatio" +
      "n\022m\n\ractivity_type\030\003 \001(\0162!.org.schemata." +
      "schema.ActivityTypeB3\212\227\"/\212\265\030+Lifecycle e" +
      "vent type for the Category table:\200\001\212\246\035:\212" +
      "\265\0306This is the description of the Catego" +
      "ry activity table\222\246\035\010Platform\232\246\035\004Core\240\246\035" +
      "\002\300\246\035\001\262\246\035\016#team-platform\272\246\035\020#alerts-platf" +
      "ormB&\n\023org.schemata.schemaB\017CategoryBuil" +
      "derb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.schemata.schema.SchemataBuilder.getDescriptor(),
        });
    internal_static_org_schemata_schema_Category_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_schemata_schema_Category_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_schemata_schema_Category_descriptor,
        new java.lang.String[] { "Id", "Name", "IsActive", });
    internal_static_org_schemata_schema_CategoryEvent_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_schemata_schema_CategoryEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_schemata_schema_CategoryEvent_descriptor,
        new java.lang.String[] { "PreviousCategoryState", "CurrentCategoryState", "ActivityType", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(org.schemata.schema.SchemataBuilder.alertChannel);
    registry.add(org.schemata.schema.SchemataBuilder.domain);
    registry.add(org.schemata.schema.SchemataBuilder.eventType);
    registry.add(org.schemata.schema.SchemataBuilder.fieldCore);
    registry.add(org.schemata.schema.SchemataBuilder.isPrimaryKey);
    registry.add(org.schemata.schema.SchemataBuilder.messageCore);
    registry.add(org.schemata.schema.SchemataBuilder.owner);
    registry.add(org.schemata.schema.SchemataBuilder.teamChannel);
    registry.add(org.schemata.schema.SchemataBuilder.type);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    org.schemata.schema.SchemataBuilder.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
