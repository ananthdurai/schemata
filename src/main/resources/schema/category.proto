syntax = "proto3";
package org.schemata.schema;

import "schemata/protobuf/schemata.proto";

option java_package = "org.protocol.schema";
option java_outer_classname = "CategoryBuilder";


message Category {

  option(message_core).description = "This is the description of the Category table";
  option(message_core).comment = "The comment added after thought";
  option(message_core).see_also = "db.category MySQL table";
  option(owner) = "Platform";
  option(domain) = "Core";
  option(schema_type) = ENTITY;
  option(team_channel) = "#team-platform";
  option(alert_channel) = "#alerts-platform";

  int32 id = 1
  [(field_core).description = "Unique identifier for Category", (is_primary_key) = true];

  string name = 2
  [(field_core).description = "Name of the Category"];

  bool is_active = 3
  [(field_core).description = "define the active status of the Category. `true` == active; `false` = inactive`", (field_core).comment = "should refactor to non-binary status"];

}

message CategoryEvent {
  option(message_core).description = "This is the description of the Category activity table";
  option(owner) = "Platform";
  option(domain) = "Core";
  option(schema_type) = EVENT;
  option(event_type) = LIFECYCLE;
  option(team_channel) = "#team-platform";
  option(alert_channel) = "#alerts-platform";

  Category previous_category_state = 1
  [(field_core).description = "Previous version of the Category entity before the mutation"];

  Category current_category_state = 2
  [(field_core).description = "Current version of the Category entity before the mutation"];

  ActivityType activity_type = 3
  [(field_core).description = "Lifecycle event type for the Category table"];
}